name: Build and Deploy only affected Apps to Amazon ECS

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**.md"
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
  AWS_S3_BUCKET: 'peter-###'
  SOURCE_DIR: './dist/packages/app'

jobs:
  test:
    runs-on: ubuntu-latest
    name: STEP | TEST...💯
    steps:
      - run: echo "Do something..."
      
      - name: << Results >>
        run: echo "테스트가 완료되었습니다. 100점입니다."
      
  build:
    runs-on: ubuntu-latest
    name: STEP | BUILDING...🔨
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      hasAffected: ${{ steps.checkForAffected.outputs.hasAffected }}
    steps:
      - name: << Checkout to repository >>
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: << Setting node >>
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: << Install NPM >>   
        run: npm ci
      
      - name: << Build only affected >>
        uses: nrwl/nx-set-shas@v3
      - run: npx nx affected --target=build --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}  

      - name: << Check for affected projects >>
        uses: dkhunt27/action-nx-affected-list@v4
        id: checkForAffected
      
      - name: << Set matrix for deploy >> 
        id: set-matrix
        run: echo "matrix={\"affectedApps\":${{ toJSON(steps.checkForAffected.outputs.affectedApps) }}}" >> $GITHUB_OUTPUT
        
        # 아티팩트 업로드하기

      - name: << Results >>
        run: echo "빌드가 완료되었습니다. 빌드된 앱 = ${{ steps.checkForAffected.outputs.affectedApps }}"
      
      

  deploy:
    needs: build
    if: needs.build.outputs.hasAffected == 'true'
    runs-on: ubuntu-latest
    name: STEP | DEPLOY...🎊
    strategy:
        matrix: ${{ fromJSON(needs.build.outputs.matrix) }}
    steps:
      - name: << Deploy to S3 >>
        run: |
          echo "${{ matrix.affectedApps }}"
      
          
